@page "/SimonSays"

<PageTitle>SimonSays</PageTitle>

<h1>SimonSays</h1>
score: @clickCounter

<div>
    @for (int i = 0; i < buttonColors.Length; i++)
    {
        var index = i;
        <button style="background-color:@buttonColors[index];" @onclick="@(async () => await SetColor(index))">@buttonText[i]</button>
        @if ((i + 1) % 3 == 0)
        {
            <div></div>
        }
    }
</div>

@code {

    private int clickCounter = 0;
    private string [] buttonColors = new string [9] { "white", "white", "white", "white", "white", "white", "white", "white", "white" };
    private string [] buttonText = new string [9] { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
    @* private int [][] buttonOrder = new int [9][] { new int [1] {1}, new int [1]{2}, new int [1]{3}, new int [0], new int [0], new int [0], new int [0], new int [0], new int [0] }; *@
    async Task SetColor(int index)
    {
        
        @* if(CheckIfCorrect(index)) *@
        @* { *@
            if (buttonColors[index] == "white")
        {
            buttonColors[index] = "blue";
            await Task.Delay(100);
            buttonColors[index] = "white";
        }
        else if(buttonColors[index] == "blue")
        {
            buttonColors[index] = "blue";
            await Task.Delay(100);
            buttonColors[index] = "white";
        }
    @*}*@
        
        
        StateHasChanged();
    }
     @* private bool CheckIfCorrect(int index)
     {
        if(buttonOrder[index].Contains(clickCounter))
        {
            clickCounter++;
            return true;
        }
        else
        {
            clickCounter = 0;
            return false;
        }
     } *@
}
